plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hulahoop'
version = '0.0.1-SNAPSHOT'
description = 'hulahoop-blue-backend'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 🌐 REST API
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // ⚡ WebClient (Gemini API 호출용)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // 🔒 Security & JWT
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 🗃️ JPA + MyBatis (필요 시 병행)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ⚙️ 설정 자동 완성/매핑 지원
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // 📊 Actuator (선택)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // 🧪 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
